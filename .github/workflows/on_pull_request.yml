name: Modify Pull Request

on:
  pull_request:
    types: [opened, synchronize]

jobs: 
  call_on_item_open:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code.
        uses: actions/checkout@v4

      - name: Deploy Node
        uses: actions/setup-node@v4
        with:
          node-version: '21'

      - name: Node Clean Install
        run: npm ci

      - name: Access PR Body as JSON
        uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          issue-body: ${{ github.event.pull_request.body }}

      - name: Log PR Body
        run: cat ${HOME}/issue-parser-result.json
      
      - name: Extract Issue Project ID and Project Fields
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PROJECT_PAT_TOKEN }}
          script: |
            const { 
              addItemToProject, 
              getIssueItemInfo, 
              getProjectFieldIDs,
              setProjectItemPriority,
              setProjectItemSize,
              setProjectItemDepartment,
              getIssueNumberFromPRBody
            } = await import('${{ github.workspace }}/.github/scripts/pr.js')

            // Get project fields
            const { projectID, priorityFieldID, sizeFieldID, departmentFieldID } = await getProjectFieldIDs({github});

            // Get pull request id
            const prID = '${{github.event.pull_request.node_id}}'
            console.log(`Pull Request ID: ${prID}`);

            const addItemToProjectVariables = {
              project: projectID,
              item: prID
            };

            // Add pull request to project and return pr project item id
            const prItemID = await addItemToProject( { github }, addItemToProjectVariables )
            console.log(`Pull Request Project Item ID: ${prItemID}`);


            const relevantIssueText = "${{steps.issue-parser.outputs.issueparser_relevant_issue }}"
            console.log(relevantIssueText)
            //const issueNumber = getIssueNumberFromPRBody("${{steps.issue-parser.outputs.issueparser_relevant_issue }}")
            const issueNumber = 0;
            if (issueNumber === 0) {

                return;
            
            }

            const issueItemIDVariables = {
              issueNumber: issueNumber,
            }

            // Get relevant info from the issue
            const { 
              issueProjectID, 
              priorityOptionID, 
              sizeOptionID, 
              departmentOptionID 
            } = await getIssueItemInfo( {github}, issueItemIDVariables );

            const priorityVars = {
              project: projectID,
              item: prItemID,
              priorityField: priorityFieldID,
              priority: priorityOptionID
            };

            const sizeVars = {
              project: projectID,
              item: prItemID,
              sizeField: sizeFieldID,
              size: sizeOptionID
            };

            const departmentVars = {
              project: projectID,
              item: prItemID,
              departmentField: departmentFieldID,
              department: departmentOptionID
            };

            await setProjectItemPriority({github}, priorityVars)
            await setProjectItemSize({github}, sizeVars);
            await setProjectItemDepartment({github}, departmentVars)






